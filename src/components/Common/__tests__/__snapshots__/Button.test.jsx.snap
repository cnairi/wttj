// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Common <Button /> renders as a button with an onClick action by default 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c0 {
  color: #FFFFFF;
  font-size: 0.75rem;
  font-weight: 600;
  -webkit-letter-spacing: 0;
  -moz-letter-spacing: 0;
  -ms-letter-spacing: 0;
  letter-spacing: 0;
  border-radius: 6px;
  background-color: #3B35DC;
  border-color: #3B35DC;
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: auto;
  height: 2.625rem;
  padding: 0 0.9375rem;
  font-size: 0.875rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  outline: none !important;
  border-width: 1px;
  border-style: solid;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  overflow: hidden;
  -webkit-transition: 300ms ease;
  transition: 300ms ease;
  width: 100%;
}

.c0 > *:not(:only-child):not(:last-child) {
  margin-right: 0.625rem;
}

[data-wui-hidefocusrings] .c0:focus {
  box-shadow: none;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(59,53,220,0.5);
}

.c0:hover {
  background-color: #5650EC;
  border-color: #5650EC;
}

.c0:active {
  background-color: #241DBB;
  border-color: #241DBB;
}

.c0[disabled] {
  cursor: not-allowed;
}

@media (min-width:980px) {
  .c0 {
    width: auto;
  }
}

<div>
      <button
        class="c0"
        type="button"
        variant="primary"
        width="[object Object]"
      >
        See more
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="sc-LzLsE kipjQg"
      type="button"
      variant="primary"
      width="[object Object]"
    >
      See more
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Component Common <Button /> renders with an <a> when external 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  color: #FFFFFF;
  font-size: 0.75rem;
  font-weight: 600;
  -webkit-letter-spacing: 0;
  -moz-letter-spacing: 0;
  -ms-letter-spacing: 0;
  letter-spacing: 0;
  border-radius: 6px;
  background-color: #3B35DC;
  border-color: #3B35DC;
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: auto;
  height: 2.625rem;
  padding: 0 0.9375rem;
  font-size: 0.875rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  outline: none !important;
  border-width: 1px;
  border-style: solid;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  overflow: hidden;
  -webkit-transition: 300ms ease;
  transition: 300ms ease;
  width: 100%;
}

.c0 > *:not(:only-child):not(:last-child) {
  margin-right: 0.625rem;
}

[data-wui-hidefocusrings] .c0:focus {
  box-shadow: none;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(59,53,220,0.5);
}

.c0:hover {
  background-color: #5650EC;
  border-color: #5650EC;
}

.c0:active {
  background-color: #241DBB;
  border-color: #241DBB;
}

.c0[disabled] {
  cursor: not-allowed;
}

@media (min-width:980px) {
  .c0 {
    width: auto;
  }
}

<body>
    <div>
      <a
        class="c0"
        href="https://www.welcometothejungle.com/en/companies/wttj/jobs/senior-editor-journalist_prague"
        rel="noopener nofollow noreferrer"
        target="_blank"
        variant="primary"
        width="[object Object]"
      >
        See more
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="sc-LzLsE kipjQg"
      href="https://www.welcometothejungle.com/en/companies/wttj/jobs/senior-editor-journalist_prague"
      rel="noopener nofollow noreferrer"
      target="_blank"
      variant="primary"
      width="[object Object]"
    >
      See more
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
